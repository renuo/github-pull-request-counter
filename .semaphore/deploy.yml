version: v1.0
name: deploy
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
blocks:
  - name: Deploy
    execution_time_limit:
      minutes: 15
    task:
      secrets:
        - name: github-pull-request-counter
      prologue:
        commands:
          - checkout
          - cache restore
          - nvm install
      jobs:
        - name: Upload to Chrome Web Store
          commands:
            - cd src && zip -r ../extension.zip . && cd -

            # Exchange refresh token for access token
            - ACCESS_TOKEN=$(curl -sS https://oauth2.googleapis.com/token \
              -d client_id="${GOOGLE_CLIENT_ID}" \
              -d client_secret="${GOOGLE_CLIENT_SECRET}" \
              -d refresh_token="${GOOGLE_REFRESH_TOKEN}" \
              -d grant_type=refresh_token | jq -r .access_token)

            # Fail early if token didn't arrive
            - 'if [ -z "$ACCESS_TOKEN" ] || [ "$ACCESS_TOKEN" = "null" ]; then echo "Failed to obtain access token"; exit 1; fi'

            # Upload the ZIP to the existing item
            - |
              UPLOAD_RESPONSE=$(curl -sS \
                -H "Authorization: Bearer ${ACCESS_TOKEN}" \
                -H "x-goog-api-version: 2" \
                -H "Content-Type: application/zip" \
                -X PUT \
                -T extension.zip \
                "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${GOOGLE_EXTENSION_ID}")
              echo "$UPLOAD_RESPONSE"
              UPLOAD_STATE=$(echo "$UPLOAD_RESPONSE" | jq -r .uploadState)
              if [ "$UPLOAD_STATE" != "SUCCESS" ]; then
                echo "Upload failed (uploadState=$UPLOAD_STATE)"; exit 1;
              fi

            # Publish to public (omit ?target=trustedTesters to go public)
            - |
              PUBLISH_RESPONSE=$(curl -sS \
                -H "Authorization: Bearer ${ACCESS_TOKEN}" \
                -H "x-goog-api-version: 2" \
                -H "Content-Length: 0" \
                -X POST \
                "https://www.googleapis.com/chromewebstore/v1.1/items/${GOOGLE_EXTENSION_ID}/publish")
              echo "$PUBLISH_RESPONSE"
              PUBLISH_STATUS=$(echo "$PUBLISH_RESPONSE" | jq -r '.status[0] // empty')
              if [ "$PUBLISH_STATUS" != "OK" ]; then
                echo "Publish failed (status=$PUBLISH_STATUS)"; exit 1;
